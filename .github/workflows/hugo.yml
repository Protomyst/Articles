name: Hugo Build and Deploy

on:
  push:
    branches:
      - main
  schedule:
    - cron: '0 2 * * *'  # Runs at 2 AM UTC daily
  workflow_dispatch:  # Enables manual trigger

permissions:
  contents: read
  pages: write
  id-token: write

jobs:
  build-deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
        
      - name: Setup Hugo
        uses: peaceiris/actions-hugo@v2
        with:
          hugo-version: 'latest'
          extended: true
          
      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.x'
          
      - name: Download Theme
        run: |
          mkdir -p themes/PaperMod
          curl -L https://github.com/adityatelange/hugo-PaperMod/archive/refs/heads/master.tar.gz | tar xz -C themes/PaperMod --strip-components=1
          
      - name: Create Hugo Config
        run: |
          cat > config.yml << 'EOL'
          baseURL: 'https://doc.protomyst.com/'
          languageCode: 'en-us'
          title: 'My Blog'
          theme: 'PaperMod'
          
          taxonomies:
            category: categories
            archive: archives
            
          params:
            defaultTheme: auto
            ShowBreadCrumbs: true
            ShowPostNavLinks: true
            ShowCodeCopyButtons: true
          EOL
          
      - name: Process Markdown Files
        run: |
          python - << 'EOL'
          import os
          import re
          from datetime import datetime
          
          def add_front_matter(file_path):
              with open(file_path, 'r', encoding='utf-8') as f:
                  content = f.read()
              
              # Skip if front matter already exists
              if content.startswith('---'):
                  return
                  
              # Get relative folder path for archive
              folder = os.path.dirname(file_path)
              if folder.startswith('./'):
                  folder = folder[2:]
              
              # Extract title from filename
              filename = os.path.basename(file_path)
              title = os.path.splitext(filename)[0]
              
              # Create front matter
              front_matter = f"""---
          title: "{title}"
          date: {datetime.now().strftime('%Y-%m-%d')}
          archives: ["{folder}"]
          ---
          
          """
              
              # Write updated content
              with open(file_path, 'w', encoding='utf-8') as f:
                  f.write(front_matter + content)
          
          # Process all markdown files except README.md
          for root, dirs, files in os.walk('.'):
              for file in files:
                  if file.endswith('.md') and file.lower() != 'readme.md':
                      add_front_matter(os.path.join(root, file))
          EOL
          
      - name: Build Site
        run: hugo --minify
        
      - name: Setup Pages
        uses: actions/configure-pages@v4
        
      - name: Upload Pages Artifact
        uses: actions/upload-pages-artifact@v2
        with:
          path: ./public
          
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4